version: '1.8.1'
type: update
id: 'certified-nodejs-installer'
name: 'Node.js® and NPM installer for certified templates'
homepage: https://nodejs.org/en/
baseUrl: https://raw.githubusercontent.com/DmytroZubelevych/nodejs-installation-addon/main
description: Installs Node.js® - a JavaScript runtime built on Chrome's V8 JavaScript engine - into the nodes based VAP certified templates. Node.js uses an event-driven, non-blocking I/O model that makes it lightweight and efficient. Node.js' package ecosystem, npm, is the largest ecosystem of open source libraries in the world.
logo: https://raw.githubusercontent.com/DmytroZubelevych/nodejs-installation-addon/main/images/node.png

targetNodes:
  nodeType:
    - apache
    - apache2
    - apache2-ruby
    - apache-lb
    - apache-python
    - apache-ruby
    - couchbase
    - dotnet
    - glassfish
    - glassfish3
    - glassfish4
    - golang
    - haproxy
    - javaengine
    - jenkins
    - jenkins2
    - jetty
    - jetty6
    - kubernetes
    - lemp
    - litespeedadc
    - litespeedphp
    - llsmp
    - mariadb
    - mariadb10
    - mariadb-dockerized
    - memcached
    - memcached-dockerized
    - mongodb
    - mongodb-dockerized
    - mysql
    - mysql5
    - nginx
    - nginx-dockerized
    - nginxphp
    - nginxphp-dockerized
    - nginx-ruby
    - nginxruby
    - opensearch
    - opensearch1
    - payara
    - perconadb
    - postgres10
    - postgres11
    - postgres12
    - postgres13
    - postgres14
    - postgres9
    - postgresql
    - redis
    - redis6
    - springboot
    - storage
    - tomcat
    - tomcat6
    - tomcat7
    - tomcat8
    - tomcat85
    - tomcat9
    - tomee
    - tomee-dockerized
    - varnish
    - varnish-dockerized
    - wildfly

settings:
  main:
    fields:          
      - type: list
        name: minorVersion
        caption: Node.js® minor version
        required: true
        dependsOn:
          version:
            16:
            - value: 16.20.2
              caption: 16.20.2
            - value: 16.20.1
              caption: 16.20.1
            - value: 16.20.0
              caption: 16.20.0
            18:
            - value: latest
              caption: latest
            20:
            - value: latest
              caption: latest
    onBeforeInit: /scripts/onBeforeInit.js

buttons:
  - caption: Change Node.js® Version
    loadingText: Installing..
    settings: main
    confirmText: Are you sure you wish to uninstall the current Node.js® version and install a new one?
    action: install

onAfterRedeployContainer:
  - install

onAfterAddNode:
  - install

onAfterCloneNodes:
  - install

onInstall:
  - install

onUninstall:
  - uninstall

actions:
  install:
    - getMasterId
    - if (!"${settings.minorVersion}".startsWith('16')):
      - cmd[${globals.masterId}]: |-
          wget -O /root/check_distro.sh ${baseUrl}/scripts/check_distro.sh 2>/dev/null;
          bash /root/check_distro.sh;
        user: root   
      - if (response.out == "Non-supported"):
        - stopEvent:
            type: warning
            message: Installation of Node.js® version higher than 16 is not supported for the selected layer because of glibc version lower than 2.28. Please either use the Node.js® version 16 or consider upgrade to newer OS version for the selected layer.
    - cmd [${globals.masterId}]: |-
        if which microdnf &>/dev/null; then
            OS_PACKAGE_MANAGER="microdnf"
        else
            OS_PACKAGE_MANAGER="yum"
        fi
        echo ${OS_PACKAGE_MANAGER}
      user: root
    - setGlobals: 
        osPackageManager: ${response.out}
    - cmd [${targetNodes.nodeGroup}]: |-
        ${globals.osPackageManager} -y install yum-utils
        yum-config-manager --disable mariadb || true;
      user: root
    - uninstall
    - cmd [${targetNodes.nodeGroup}]: |-
        ${globals.osPackageManager} clean all
        NODEJS_MAJOR_VERSION=$(echo ${settings.minorVersion} | awk -F . '{print $1}')
        curl -fsSL https://rpm.nodesource.com/setup_${NODEJS_MAJOR_VERSION}.x | bash - 
        ${globals.osPackageManager} install nodejs-${settings.minorVersion} -y &&
        curl -sL https://dl.yarnpkg.com/rpm/yarn.repo > /etc/yum.repos.d/yarn.repo && ${globals.osPackageManager} -y install yarn && yum-config-manager --disable yarn nodesource-nsolid nodesource-nodejs
        ${globals.osPackageManager} clean all
      user: root
    - cmd [${targetNodes.nodeGroup}]: |-
        wget ${baseUrl}/configs/nodejs -O /etc/sudoers.d/nodejs
        npm update npm; chown -R 700:700 /usr/lib/node_modules
      user: root
    - cmd [${targetNodes.nodeGroup}]:
        - echo -e "export PATH=/usr/lib/node_modules:$HOME/node_modules/.bin:$PATH" >> $HOME/.bashrc;

  uninstall:
    - cmd [${targetNodes.nodeGroup}]: |-
        ${globals.osPackageManager} -y remove nodejs nodejs-libs yarn nodesource-release nodesource-release-nodistro 2>&1;
        rm -rf $HOME/node_modules /etc/sudoers.d/nodejs 2>&1;
        sed -ci -e "/node_modules/d" $HOME/.bashrc 2>&1;
      user: root

  getMasterId:
    - forEach(nodes.${targetNodes.nodeGroup}):
      - cmd[${@i.id}]: |- 
          source /.jelenv;  
          echo ${MASTER_ID};
      - setGlobals:
          masterId: ${response.out}
